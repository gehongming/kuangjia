{"name": "测试登录正常", "status": "failed", "statusDetails": {"message": "AssertionError: assert True == False\n  -True\n  +False", "trace": "self = <Testcases.test_2buy.TestLogin object at 0x0000000004DD1B38>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bba55ee830bc62b9b3932dfbd1044d82\")>\n\n    @pytest.mark.demo\n    @allure.story('登录')\n    @allure.title('测试登录正常')\n    @allure.description('这是验证码登录的成功用例')\n    @allure.link('www.baidu.com')\n    def test_login(self,open_url1):\n        try:\n            lp(open_url1).login_code(bd.login_data[\"user\"],bd.login_data[\"passwd\"])\n            time.sleep(5)\n            assert True == ip(open_url1).login_check()\n        except AssertionError as e:\n            Filelist = get_filelist(contants.reports_screen)\n            with open(Filelist[0], \"rb\") as f:\n                context = f.read()\n                allure.attach(context, \"错误图片\", attachment_type=allure.attachment_type.PNG)\n>               raise e\n\ntest_2buy.py:42: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <Testcases.test_2buy.TestLogin object at 0x0000000004DD1B38>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bba55ee830bc62b9b3932dfbd1044d82\")>\n\n    @pytest.mark.demo\n    @allure.story('登录')\n    @allure.title('测试登录正常')\n    @allure.description('这是验证码登录的成功用例')\n    @allure.link('www.baidu.com')\n    def test_login(self,open_url1):\n        try:\n            lp(open_url1).login_code(bd.login_data[\"user\"],bd.login_data[\"passwd\"])\n            time.sleep(5)\n>           assert True == ip(open_url1).login_check()\nE           assert True == False\nE             -True\nE             +False\n\ntest_2buy.py:36: AssertionError"}, "description": "这是验证码登录的成功用例", "steps": [{"name": "验证码登录", "status": "passed", "parameters": [{"name": "user", "value": "'17625188013'"}, {"name": "passwd", "value": "'sD2q'"}], "start": 1574306935034, "stop": 1574306935588}], "attachments": [{"name": "错误图片", "source": "2e44155f-2ab6-4509-b3a6-721734480c2b-attachment.png", "type": "image/png"}, {"name": "log", "source": "e2312b65-53af-4d05-88bc-a7d839ad54ff-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "c8f44332-f6fb-454a-a6cf-6901886d6223-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "a3ad65f3-acf4-4528-94fb-dcc4fc50a28f-attachment.txt", "type": "text/plain"}], "start": 1574306935034, "stop": 1574306944558, "uuid": "d9931775-78f6-45d9-b2b3-858a3ec775c6", "historyId": "a404df02f600ced5f37d055b093f39d6", "fullName": "Testcases.test_2buy.TestLogin#test_login", "labels": [{"name": "story", "value": "登录"}, {"name": "feature", "value": "每日用例-加购"}, {"name": "tag", "value": "demo"}, {"name": "parentSuite", "value": "Testcases"}, {"name": "suite", "value": "test_2buy"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "JS-CS-002"}, {"name": "thread", "value": "9856-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcases.test_2buy"}], "links": [{"type": "link", "url": "www.baidu.com", "name": "www.baidu.com"}]}