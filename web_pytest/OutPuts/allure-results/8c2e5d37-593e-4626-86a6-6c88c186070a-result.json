{"name": "test_orders", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Testcases.test_2buy.TestLogin object at 0x0000000004D88CC0>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8289d0d5857e4a4cac3d0732f931112e\")>\n\n    @pytest.mark.smoke\n    def test_orders(self,open_url1):\n        hp(open_url1).click_cart()\n        time.sleep(1.5)\n        sp(open_url1).check_goods()\n        time.sleep(2)\n>       op(open_url1).generate_orders(bd.to_order[\"message\"])\n\ntest_2buy.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PageObjects\\pc\\order_page.py:17: in generate_orders\n    self.input_text(op.gogogo,'输入留言',messaage)\n..\\common\\basepage.py:118: in input_text\n    self.wait_eleVisible(loc,img_doc)\n..\\common\\basepage.py:28: in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8289d0d5857e4a4cac3d0732f931112e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004DEE1D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "steps": [{"name": "点击进入购物车", "status": "passed", "start": 1574059345446, "stop": 1574059346193}, {"name": "选择商品，并结算", "status": "passed", "start": 1574059347693, "stop": 1574059348267}, {"name": "生成订单", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \n\n", "trace": "  File \"E:\\Python3\\lib\\site-packages\\allure_commons\\_allure.py\", line 141, in impl\n    return func(*a, **kw)\n  File \"D:\\B2B\\PageObjects\\pc\\order_page.py\", line 17, in generate_orders\n    self.input_text(op.gogogo,'输入留言',messaage)\n  File \"D:\\B2B\\common\\basepage.py\", line 118, in input_text\n    self.wait_eleVisible(loc,img_doc)\n  File \"D:\\B2B\\common\\basepage.py\", line 28, in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n  File \"E:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n"}, "parameters": [{"name": "messaage", "value": "'网管查房'"}], "start": 1574059350267, "stop": 1574059380720}], "attachments": [{"name": "log", "source": "3bbe0d3d-d818-42d9-89f4-86b553f1e6b4-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "93543aff-be8b-4139-b0ea-4bcf776c694b-attachment.txt", "type": "text/plain"}], "start": 1574059345446, "stop": 1574059380721, "uuid": "c178c548-6167-4254-9996-3dbe6abe891a", "historyId": "1ea0a0fa53fe50fbf5bd97e61db4bb61", "fullName": "Testcases.test_2buy.TestLogin#test_orders", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "Testcases"}, {"name": "suite", "value": "test_2buy"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "JS-CS-002"}, {"name": "thread", "value": "11256-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "Testcases.test_2buy"}]}