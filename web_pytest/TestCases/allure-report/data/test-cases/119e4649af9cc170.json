{
  "uid" : "119e4649af9cc170",
  "name" : "test_orders",
  "fullName" : "Testcases.test_2buy.TestLogin#test_orders",
  "historyId" : "1ea0a0fa53fe50fbf5bd97e61db4bb61",
  "time" : {
    "start" : 1574059345446,
    "stop" : 1574059380721,
    "duration" : 35275
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <Testcases.test_2buy.TestLogin object at 0x0000000004D88CC0>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8289d0d5857e4a4cac3d0732f931112e\")>\n\n    @pytest.mark.smoke\n    def test_orders(self,open_url1):\n        hp(open_url1).click_cart()\n        time.sleep(1.5)\n        sp(open_url1).check_goods()\n        time.sleep(2)\n>       op(open_url1).generate_orders(bd.to_order[\"message\"])\n\ntest_2buy.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PageObjects\\pc\\order_page.py:17: in generate_orders\n    self.input_text(op.gogogo,'输入留言',messaage)\n..\\common\\basepage.py:118: in input_text\n    self.wait_eleVisible(loc,img_doc)\n..\\common\\basepage.py:28: in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8289d0d5857e4a4cac3d0732f931112e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004DEE1D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "open_url1",
    "time" : {
      "start" : 1574059298145,
      "stop" : 1574059305867,
      "duration" : 7722
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  }, {
    "name" : "session_action",
    "time" : {
      "start" : 1574059298145,
      "stop" : 1574059298145,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "测试开始",
      "time" : {
        "start" : 1574059298145,
        "stop" : 1574059298145,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 1,
    "hasContent" : true
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <Testcases.test_2buy.TestLogin object at 0x0000000004D88CC0>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8289d0d5857e4a4cac3d0732f931112e\")>\n\n    @pytest.mark.smoke\n    def test_orders(self,open_url1):\n        hp(open_url1).click_cart()\n        time.sleep(1.5)\n        sp(open_url1).check_goods()\n        time.sleep(2)\n>       op(open_url1).generate_orders(bd.to_order[\"message\"])\n\ntest_2buy.py:82: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PageObjects\\pc\\order_page.py:17: in generate_orders\n    self.input_text(op.gogogo,'输入留言',messaage)\n..\\common\\basepage.py:118: in input_text\n    self.wait_eleVisible(loc,img_doc)\n..\\common\\basepage.py:28: in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8289d0d5857e4a4cac3d0732f931112e\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004DEE1D0>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "点击进入购物车",
      "time" : {
        "start" : 1574059345446,
        "stop" : 1574059346193,
        "duration" : 747
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "选择商品，并结算",
      "time" : {
        "start" : 1574059347693,
        "stop" : 1574059348267,
        "duration" : 574
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    }, {
      "name" : "生成订单",
      "time" : {
        "start" : 1574059350267,
        "stop" : 1574059380720,
        "duration" : 30453
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"E:\\Python3\\lib\\site-packages\\allure_commons\\_allure.py\", line 141, in impl\n    return func(*a, **kw)\n  File \"D:\\B2B\\PageObjects\\pc\\order_page.py\", line 17, in generate_orders\n    self.input_text(op.gogogo,'输入留言',messaage)\n  File \"D:\\B2B\\common\\basepage.py\", line 118, in input_text\n    self.wait_eleVisible(loc,img_doc)\n  File \"D:\\B2B\\common\\basepage.py\", line 28, in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n  File \"E:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "messaage",
        "value" : "'网管查房'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "235197075de0cd56",
      "name" : "log",
      "source" : "235197075de0cd56.txt",
      "type" : "text/plain",
      "size" : 2012
    }, {
      "uid" : "3259524d2562cc84",
      "name" : "stderr",
      "source" : "3259524d2562cc84.txt",
      "type" : "text/plain",
      "size" : 2417
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 3,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "open_url1::0",
    "time" : {
      "start" : 1574059381482,
      "stop" : 1574059384646,
      "duration" : 3164
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "parentSuite",
    "value" : "Testcases"
  }, {
    "name" : "suite",
    "value" : "test_2buy"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "JS-CS-002"
  }, {
    "name" : "thread",
    "value" : "11256-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Testcases.test_2buy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "smoke" ]
  },
  "source" : "119e4649af9cc170.json",
  "parameterValues" : [ ]
}