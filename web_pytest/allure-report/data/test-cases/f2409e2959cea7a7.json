{
  "uid" : "f2409e2959cea7a7",
  "name" : "测试伴侣盒加入购物车",
  "fullName" : "Testcases.test_2buy.TestLogin#test_buy_blh",
  "historyId" : "7dcbea1e9505b371c505b9f87218ebf8",
  "time" : {
    "start" : 1574321612526,
    "stop" : 1574321646308,
    "duration" : 33782
  },
  "description" : "这是伴侣盒加入购物车的成功用例",
  "descriptionHtml" : "<p>这是伴侣盒加入购物车的成功用例</p>\n",
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "self = <Testcases.test_2buy.TestLogin object at 0x0000000004E012B0>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"297d9bb06e78f3611d5414d3c9ea4908\")>\n\n    @pytest.mark.demo\n    @allure.story('测试伴侣盒加入购物车')\n    @allure.title('测试伴侣盒加入购物车')\n    @allure.description('这是伴侣盒加入购物车的成功用例')\n    def test_buy_blh(self, open_url1):\n        hp(open_url1).search(bd.success_data_blh[\"title\"])\n        time.sleep(2)\n        # 是否进入搜索结果页\n        assert unquote(open_url1.current_url, encoding='utf-8') == bd.success_data_blh[\"check_url\"]\n        # 点击进入商品详情页,并切换窗口\n>       hp(open_url1).click_blh()\n\ntest_2buy.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PageObjects\\pc\\home_page.py:34: in click_blh\n    self.check_window(hpl.blh,'进入护理商品详情页面并切换窗口')\n..\\common\\basepage.py:199: in check_window\n    self.click_element(loc,img_doc)\n..\\common\\basepage.py:84: in click_element\n    self.wait_eleVisible(loc,img_doc,timeout,frequency)\n..\\common\\basepage.py:28: in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"297d9bb06e78f3611d5414d3c9ea4908\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004D9CEB8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ ],
  "testStage" : {
    "description" : "这是伴侣盒加入购物车的成功用例",
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
    "statusTrace" : "self = <Testcases.test_2buy.TestLogin object at 0x0000000004E012B0>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"297d9bb06e78f3611d5414d3c9ea4908\")>\n\n    @pytest.mark.demo\n    @allure.story('测试伴侣盒加入购物车')\n    @allure.title('测试伴侣盒加入购物车')\n    @allure.description('这是伴侣盒加入购物车的成功用例')\n    def test_buy_blh(self, open_url1):\n        hp(open_url1).search(bd.success_data_blh[\"title\"])\n        time.sleep(2)\n        # 是否进入搜索结果页\n        assert unquote(open_url1.current_url, encoding='utf-8') == bd.success_data_blh[\"check_url\"]\n        # 点击进入商品详情页,并切换窗口\n>       hp(open_url1).click_blh()\n\ntest_2buy.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\PageObjects\\pc\\home_page.py:34: in click_blh\n    self.check_window(hpl.blh,'进入护理商品详情页面并切换窗口')\n..\\common\\basepage.py:199: in check_window\n    self.click_element(loc,img_doc)\n..\\common\\basepage.py:84: in click_element\n    self.wait_eleVisible(loc,img_doc,timeout,frequency)\n..\\common\\basepage.py:28: in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"297d9bb06e78f3611d5414d3c9ea4908\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004D9CEB8>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
    "steps" : [ {
      "name" : "搜索商品",
      "time" : {
        "start" : 1574321612526,
        "stop" : 1574321613395,
        "duration" : 869
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "title",
        "value" : "'3N还原仪清洗仓'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : true
    }, {
      "name" : "点击进入伴侣盒商品详情页面",
      "time" : {
        "start" : 1574321615416,
        "stop" : 1574321646306,
        "duration" : 30890
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"E:\\Python3\\lib\\site-packages\\allure_commons\\_allure.py\", line 141, in impl\n    return func(*a, **kw)\n  File \"D:\\B2B\\PageObjects\\pc\\home_page.py\", line 34, in click_blh\n    self.check_window(hpl.blh,'进入护理商品详情页面并切换窗口')\n  File \"D:\\B2B\\common\\basepage.py\", line 199, in check_window\n    self.click_element(loc,img_doc)\n  File \"D:\\B2B\\common\\basepage.py\", line 84, in click_element\n    self.wait_eleVisible(loc,img_doc,timeout,frequency)\n  File \"D:\\B2B\\common\\basepage.py\", line 28, in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n  File \"E:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "eaa1cc63e651bfe0",
      "name" : "log",
      "source" : "eaa1cc63e651bfe0.txt",
      "type" : "text/plain",
      "size" : 1560
    }, {
      "uid" : "d66528f7a49525ca",
      "name" : "stderr",
      "source" : "d66528f7a49525ca.txt",
      "type" : "text/plain",
      "size" : 1841
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 2,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "feature",
    "value" : "每日用例-加购"
  }, {
    "name" : "story",
    "value" : "测试伴侣盒加入购物车"
  }, {
    "name" : "tag",
    "value" : "demo"
  }, {
    "name" : "parentSuite",
    "value" : "Testcases"
  }, {
    "name" : "suite",
    "value" : "test_2buy"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "JS-CS-002"
  }, {
    "name" : "thread",
    "value" : "13688-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Testcases.test_2buy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "demo" ]
  },
  "source" : "f2409e2959cea7a7.json",
  "parameterValues" : [ ]
}