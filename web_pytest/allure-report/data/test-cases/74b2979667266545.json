{
  "uid" : "74b2979667266545",
  "name" : "测试登录正常",
  "fullName" : "Testcases.test_2buy.TestLogin#test_login",
  "historyId" : "a404df02f600ced5f37d055b093f39d6",
  "time" : {
    "start" : 1574222217845,
    "stop" : 1574222249029,
    "duration" : 31184
  },
  "description" : "这是验证码登录的成功用例",
  "descriptionHtml" : "<p>这是验证码登录的成功用例</p>\n",
  "status" : "broken",
  "statusMessage" : "IndexError: list index out of range",
  "statusTrace" : "self = <Testcases.test_2buy.TestLogin object at 0x0000000004E74AC8>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc35118006b5fe8ee15149bd8861b135\")>\n\n    @allure.story('登录')\n    @allure.title('测试登录正常')\n    @allure.description('这是验证码登录的成功用例')\n    @allure.link('www.baidu.com')\n    @pytest.mark.demo\n    def test_login(self,open_url1):\n        try:\n>           lp(open_url1).login_code(bd.login_data[\"user\"],bd.login_data[\"passwd\"])\n\ntest_2buy.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\na = (<PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>, '17625188013', 'sD2q')\nkw = {}, __tracebackhide__ = True\nparams = OrderedDict([('user', \"'17625188013'\"), ('passwd', \"'sD2q'\")])\nargs = ['<PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>', \"'17625188013'\", \"'sD2q'\"]\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\nE:\\Python3\\lib\\site-packages\\allure_commons\\_allure.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>\nuser = '17625188013', passwd = 'sD2q'\n\n    @allure.step('验证码登录')\n    def login_code(self,user,passwd):\n        #输入账号密码\n>       self.input_text(loc.uesr_loc,'输入手机号',user)\n\n..\\PageObjects\\pc\\login_page.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>\nloc = ('xpath', '//input[@name=\"p1hone\"]'), img_doc = '输入手机号'\nargs = ('17625188013',)\n\n    def input_text(self,loc,img_doc,*args):\n        # 1、等待元素可见\n>       self.wait_eleVisible(loc,img_doc)\n\n..\\common\\basepage.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>\nloc = ('xpath', '//input[@name=\"p1hone\"]'), img_doc = '输入手机号', timeout = 30\nfrequency = 0.5\n\n    def wait_eleVisible(self,loc,img_doc=\"\",timeout=30,frequency=0.5):\n        logger.info(\"等待元素 {} 可见。\".format(loc))\n        try:\n            # 起始等待的时间 datetime\n            start = datetime.datetime.now()\n>           WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n\n..\\common\\basepage.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bc35118006b5fe8ee15149bd8861b135\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004EE0780>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Testcases.test_2buy.TestLogin object at 0x0000000004E74AC8>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc35118006b5fe8ee15149bd8861b135\")>\n\n    @allure.story('登录')\n    @allure.title('测试登录正常')\n    @allure.description('这是验证码登录的成功用例')\n    @allure.link('www.baidu.com')\n    @pytest.mark.demo\n    def test_login(self,open_url1):\n        try:\n            lp(open_url1).login_code(bd.login_data[\"user\"],bd.login_data[\"passwd\"])\n            time.sleep(5)\n            assert True == ip(open_url1).login_check()\n        except:\n    \n>               with open(Filelist[-1], \"rb\") as f:\nE               IndexError: list index out of range\n\ntest_2buy.py:36: IndexError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "session_action",
    "time" : {
      "start" : 1574222210723,
      "stop" : 1574222210724,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ {
      "name" : "测试开始",
      "time" : {
        "start" : 1574222210723,
        "stop" : 1574222210724,
        "duration" : 1
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "stepsCount" : 0,
      "hasContent" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 1,
    "hasContent" : true
  }, {
    "name" : "open_url1",
    "time" : {
      "start" : 1574222210724,
      "stop" : 1574222217844,
      "duration" : 7120
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "testStage" : {
    "description" : "这是验证码登录的成功用例",
    "status" : "broken",
    "statusMessage" : "IndexError: list index out of range",
    "statusTrace" : "self = <Testcases.test_2buy.TestLogin object at 0x0000000004E74AC8>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc35118006b5fe8ee15149bd8861b135\")>\n\n    @allure.story('登录')\n    @allure.title('测试登录正常')\n    @allure.description('这是验证码登录的成功用例')\n    @allure.link('www.baidu.com')\n    @pytest.mark.demo\n    def test_login(self,open_url1):\n        try:\n>           lp(open_url1).login_code(bd.login_data[\"user\"],bd.login_data[\"passwd\"])\n\ntest_2buy.py:31: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\na = (<PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>, '17625188013', 'sD2q')\nkw = {}, __tracebackhide__ = True\nparams = OrderedDict([('user', \"'17625188013'\"), ('passwd', \"'sD2q'\")])\nargs = ['<PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>', \"'17625188013'\", \"'sD2q'\"]\n\n    @wraps(func)\n    def impl(*a, **kw):\n        __tracebackhide__ = True\n        params = func_parameters(func, *a, **kw)\n        args = list(map(lambda x: represent(x), a))\n        with StepContext(self.title.format(*args, **params), params):\n>           return func(*a, **kw)\n\nE:\\Python3\\lib\\site-packages\\allure_commons\\_allure.py:141: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>\nuser = '17625188013', passwd = 'sD2q'\n\n    @allure.step('验证码登录')\n    def login_code(self,user,passwd):\n        #输入账号密码\n>       self.input_text(loc.uesr_loc,'输入手机号',user)\n\n..\\PageObjects\\pc\\login_page.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>\nloc = ('xpath', '//input[@name=\"p1hone\"]'), img_doc = '输入手机号'\nargs = ('17625188013',)\n\n    def input_text(self,loc,img_doc,*args):\n        # 1、等待元素可见\n>       self.wait_eleVisible(loc,img_doc)\n\n..\\common\\basepage.py:118: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <PageObjects.pc.login_page.LoginPage object at 0x0000000004EE0860>\nloc = ('xpath', '//input[@name=\"p1hone\"]'), img_doc = '输入手机号', timeout = 30\nfrequency = 0.5\n\n    def wait_eleVisible(self,loc,img_doc=\"\",timeout=30,frequency=0.5):\n        logger.info(\"等待元素 {} 可见。\".format(loc))\n        try:\n            # 起始等待的时间 datetime\n            start = datetime.datetime.now()\n>           WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n\n..\\common\\basepage.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"bc35118006b5fe8ee15149bd8861b135\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x0000000004EE0780>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nE:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <Testcases.test_2buy.TestLogin object at 0x0000000004E74AC8>\nopen_url1 = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"bc35118006b5fe8ee15149bd8861b135\")>\n\n    @allure.story('登录')\n    @allure.title('测试登录正常')\n    @allure.description('这是验证码登录的成功用例')\n    @allure.link('www.baidu.com')\n    @pytest.mark.demo\n    def test_login(self,open_url1):\n        try:\n            lp(open_url1).login_code(bd.login_data[\"user\"],bd.login_data[\"passwd\"])\n            time.sleep(5)\n            assert True == ip(open_url1).login_check()\n        except:\n    \n>               with open(Filelist[-1], \"rb\") as f:\nE               IndexError: list index out of range\n\ntest_2buy.py:36: IndexError",
    "steps" : [ {
      "name" : "验证码登录",
      "time" : {
        "start" : 1574222217845,
        "stop" : 1574222249028,
        "duration" : 31183
      },
      "status" : "broken",
      "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
      "statusTrace" : "  File \"E:\\Python3\\lib\\site-packages\\allure_commons\\_allure.py\", line 141, in impl\n    return func(*a, **kw)\n  File \"D:\\B2B\\PageObjects\\pc\\login_page.py\", line 15, in login_code\n    self.input_text(loc.uesr_loc,'输入手机号',user)\n  File \"D:\\B2B\\common\\basepage.py\", line 118, in input_text\n    self.wait_eleVisible(loc,img_doc)\n  File \"D:\\B2B\\common\\basepage.py\", line 28, in wait_eleVisible\n    WebDriverWait(self.driver,timeout,frequency).until(EC.visibility_of_element_located(loc))\n  File \"E:\\Python3\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ {
        "name" : "user",
        "value" : "'17625188013'"
      }, {
        "name" : "passwd",
        "value" : "'sD2q'"
      } ],
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "stepsCount" : 0,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "fc5a003078a830f4",
      "name" : "log",
      "source" : "fc5a003078a830f4.txt",
      "type" : "text/plain",
      "size" : 1423
    }, {
      "uid" : "b0aa8d1d44177308",
      "name" : "stderr",
      "source" : "b0aa8d1d44177308.txt",
      "type" : "text/plain",
      "size" : 1612
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 2,
    "shouldDisplayMessage" : true,
    "stepsCount" : 1,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "open_url1::0",
    "time" : {
      "start" : 1574222249057,
      "stop" : 1574222252117,
      "duration" : 3060
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "stepsCount" : 0,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "每日用例-加购"
  }, {
    "name" : "story",
    "value" : "登录"
  }, {
    "name" : "tag",
    "value" : "demo"
  }, {
    "name" : "parentSuite",
    "value" : "Testcases"
  }, {
    "name" : "suite",
    "value" : "test_2buy"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "JS-CS-002"
  }, {
    "name" : "thread",
    "value" : "36572-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "Testcases.test_2buy"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ {
    "name" : "www.baidu.com",
    "url" : "www.baidu.com",
    "type" : "link"
  } ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "demo" ]
  },
  "source" : "74b2979667266545.json",
  "parameterValues" : [ ]
}